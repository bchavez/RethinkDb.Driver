




//AUTOGENERATED, DO NOTMODIFY.
//Do not edit this file directly.

#pragma warning disable 1591 // Missing XML comment for publicly visible type or member
#pragma warning disable 219 //The variable 'lower_limit' is assigned but its value is never used
// ReSharper disable CheckNamespace

using System;
using System.Linq;
using System.Collections;
using System.Collections.Generic;
using RethinkDb.Driver.Model;
using RethinkDb.Driver.Ast;
using NUnit.Framework;
using RethinkDb.Driver.Tests;
using static RethinkDb.Driver.Tests.TestingCommon;

namespace RethinkDb.Driver.Test.Generated {

    // Test basic timezone manipulation

    [TestFixture]
    public class TimesTimezones : YamlTestFixture {

        public TimesTimezones (){
        }




        [Test]
        public void YamlTest_TimesTimezones(){

             
             //JavaDef, times/timezones.yaml, #3
             //Original: t1 = r.time(2013, r.july, 29, 23, 30, 0, "+00:00")
             
                 var t1 = (Time) (r.time(2013L, r.july(), 29L, 23L, 30L, 0L, "+00:00"));
             
             
             //JavaDef, times/timezones.yaml, #5
             //Original: tutc1 = t1.in_timezone("Z")
             
                 var tutc1 = (InTimezone) (t1.inTimezone("Z"));
             
             
             //JavaDef, times/timezones.yaml, #6
             //Original: tutc2 = t1.in_timezone("+00:00")
             
                 var tutc2 = (InTimezone) (t1.inTimezone("+00:00"));
             
             
             //JavaDef, times/timezones.yaml, #7
             //Original: tutc3 = t1.in_timezone("+00")
             
                 var tutc3 = (InTimezone) (t1.inTimezone("+00"));
             
             
             //JavaDef, times/timezones.yaml, #8
             //Original: tutcs = r.expr([tutc1, tutc2, tutc3])
             
                 var tutcs = (MakeArray) (r.expr(r.array(tutc1, tutc2, tutc3)));
             
             
             //JavaDef, times/timezones.yaml, #10
             //Original: tm1 = t1.in_timezone("-00:59")
             
                 var tm1 = (InTimezone) (t1.inTimezone("-00:59"));
             
             
             //JavaDef, times/timezones.yaml, #11
             //Original: tm2 = t1.in_timezone("-01:00")
             
                 var tm2 = (InTimezone) (t1.inTimezone("-01:00"));
             
             
             //JavaDef, times/timezones.yaml, #12
             //Original: tm3 = t1.in_timezone("-01:01")
             
                 var tm3 = (InTimezone) (t1.inTimezone("-01:01"));
             
             
             //JavaDef, times/timezones.yaml, #13
             //Original: tms = r.expr([tm1, tm2, tm3])
             
                 var tms = (MakeArray) (r.expr(r.array(tm1, tm2, tm3)));
             
             
             //JavaDef, times/timezones.yaml, #15
             //Original: tp1 = t1.in_timezone("+00:59")
             
                 var tp1 = (InTimezone) (t1.inTimezone("+00:59"));
             
             
             //JavaDef, times/timezones.yaml, #16
             //Original: tp2 = t1.in_timezone("+01:00")
             
                 var tp2 = (InTimezone) (t1.inTimezone("+01:00"));
             
             
             //JavaDef, times/timezones.yaml, #17
             //Original: tp3 = t1.in_timezone("+01:01")
             
                 var tp3 = (InTimezone) (t1.inTimezone("+01:01"));
             
             
             //JavaDef, times/timezones.yaml, #18
             //Original: tps = r.expr([tp1, tp2, tp3])
             
                 var tps = (MakeArray) (r.expr(r.array(tp1, tp2, tp3)));
             
             
             //JavaDef, times/timezones.yaml, #20
             //Original: ts = tutcs.union(tms).union(tps).union([t1])
             
                 var ts = (Union) (tutcs.union(tms).union(tps).union(r.array(t1)));
             
             {
                 SetContext( "eyJUZXN0VHlwZSI6IkphdmFRdWVyeSIsIlRlc3RGaWxlIjoidGltZXMvdGltZXpvbmVzLnlhbWwiLCJMaW5lTnVtIjoiMjMiLCJPcmlnaW5hbCI6InR1dGNzLm1hcChsYW1iZGEgeDpbeC50aW1lem9uZSgpLCB4LmRheSgpXSkiLCJWYXJOYW1lIjpudWxsLCJWYXJUeXBlIjpudWxsLCJSdW5JZlF1ZXJ5IjpmYWxzZSwiVmFsdWUiOm51bGwsIkphdmEiOiJ0dXRjcy5tYXAoeCA9PiByLmFycmF5KHgudGltZXpvbmUoKSwgeC5kYXkoKSkpIiwiRXhwZWN0ZWRPcmlnaW5hbCI6IihbW1wiKzAwOjAwXCIsIDI5XSwgW1wiKzAwOjAwXCIsIDI5XSwgW1wiKzAwOjAwXCIsIDI5XV0pIiwiRXhwZWN0ZWRUeXBlIjoiTGlzdCIsIkV4cGVjdGVkSmF2YSI6InIuYXJyYXkoci5hcnJheShcIiswMDowMFwiLCAyOUwpLCByLmFycmF5KFwiKzAwOjAwXCIsIDI5TCksIHIuYXJyYXkoXCIrMDA6MDBcIiwgMjlMKSkiLCJPYnRhaW5lZCI6bnVsbCwiUnVuT3B0cyI6W10sIlJlbmRlclNvbWV0aGluZyI6ZmFsc2V9" );
                 //JavaQuery, times/timezones.yaml, #23
                 /* ExpectedOriginal: ([["+00:00", 29], ["+00:00", 29], ["+00:00", 29]]) */
                 var expected_ = r.array(r.array("+00:00", 29L), r.array("+00:00", 29L), r.array("+00:00", 29L));
                 
                 /* Original: tutcs.map(lambda x:[x.timezone(), x.day()]) */
                 var obtained = runOrCatch( tutcs.map(x => r.array(x.timezone(), x.day())) ,
                                            new {
                    }, conn);
                 
                     assertEquals(expected_, obtained);                 
             }
             
             {
                 SetContext( "eyJUZXN0VHlwZSI6IkphdmFRdWVyeSIsIlRlc3RGaWxlIjoidGltZXMvdGltZXpvbmVzLnlhbWwiLCJMaW5lTnVtIjoiMjciLCJPcmlnaW5hbCI6InRtcy5tYXAobGFtYmRhIHg6W3gudGltZXpvbmUoKSwgeC5kYXkoKV0pIiwiVmFyTmFtZSI6bnVsbCwiVmFyVHlwZSI6bnVsbCwiUnVuSWZRdWVyeSI6ZmFsc2UsIlZhbHVlIjpudWxsLCJKYXZhIjoidG1zLm1hcCh4ID0+IHIuYXJyYXkoeC50aW1lem9uZSgpLCB4LmRheSgpKSkiLCJFeHBlY3RlZE9yaWdpbmFsIjoiKFtbXCItMDA6NTlcIiwgMjldLCBbXCItMDE6MDBcIiwgMjldLCBbXCItMDE6MDFcIiwgMjldXSkiLCJFeHBlY3RlZFR5cGUiOiJMaXN0IiwiRXhwZWN0ZWRKYXZhIjoici5hcnJheShyLmFycmF5KFwiLTAwOjU5XCIsIDI5TCksIHIuYXJyYXkoXCItMDE6MDBcIiwgMjlMKSwgci5hcnJheShcIi0wMTowMVwiLCAyOUwpKSIsIk9idGFpbmVkIjpudWxsLCJSdW5PcHRzIjpbXSwiUmVuZGVyU29tZXRoaW5nIjpmYWxzZX0=" );
                 //JavaQuery, times/timezones.yaml, #27
                 /* ExpectedOriginal: ([["-00:59", 29], ["-01:00", 29], ["-01:01", 29]]) */
                 var expected_ = r.array(r.array("-00:59", 29L), r.array("-01:00", 29L), r.array("-01:01", 29L));
                 
                 /* Original: tms.map(lambda x:[x.timezone(), x.day()]) */
                 var obtained = runOrCatch( tms.map(x => r.array(x.timezone(), x.day())) ,
                                            new {
                    }, conn);
                 
                     assertEquals(expected_, obtained);                 
             }
             
             {
                 SetContext( "eyJUZXN0VHlwZSI6IkphdmFRdWVyeSIsIlRlc3RGaWxlIjoidGltZXMvdGltZXpvbmVzLnlhbWwiLCJMaW5lTnVtIjoiMzEiLCJPcmlnaW5hbCI6InRwcy5tYXAobGFtYmRhIHg6W3gudGltZXpvbmUoKSwgeC5kYXkoKV0pIiwiVmFyTmFtZSI6bnVsbCwiVmFyVHlwZSI6bnVsbCwiUnVuSWZRdWVyeSI6ZmFsc2UsIlZhbHVlIjpudWxsLCJKYXZhIjoidHBzLm1hcCh4ID0+IHIuYXJyYXkoeC50aW1lem9uZSgpLCB4LmRheSgpKSkiLCJFeHBlY3RlZE9yaWdpbmFsIjoiKFtbXCIrMDA6NTlcIiwgMzBdLCBbXCIrMDE6MDBcIiwgMzBdLCBbXCIrMDE6MDFcIiwgMzBdXSkiLCJFeHBlY3RlZFR5cGUiOiJMaXN0IiwiRXhwZWN0ZWRKYXZhIjoici5hcnJheShyLmFycmF5KFwiKzAwOjU5XCIsIDMwTCksIHIuYXJyYXkoXCIrMDE6MDBcIiwgMzBMKSwgci5hcnJheShcIiswMTowMVwiLCAzMEwpKSIsIk9idGFpbmVkIjpudWxsLCJSdW5PcHRzIjpbXSwiUmVuZGVyU29tZXRoaW5nIjpmYWxzZX0=" );
                 //JavaQuery, times/timezones.yaml, #31
                 /* ExpectedOriginal: ([["+00:59", 30], ["+01:00", 30], ["+01:01", 30]]) */
                 var expected_ = r.array(r.array("+00:59", 30L), r.array("+01:00", 30L), r.array("+01:01", 30L));
                 
                 /* Original: tps.map(lambda x:[x.timezone(), x.day()]) */
                 var obtained = runOrCatch( tps.map(x => r.array(x.timezone(), x.day())) ,
                                            new {
                    }, conn);
                 
                     assertEquals(expected_, obtained);                 
             }
             
             {
                 SetContext( "eyJUZXN0VHlwZSI6IkphdmFRdWVyeSIsIlRlc3RGaWxlIjoidGltZXMvdGltZXpvbmVzLnlhbWwiLCJMaW5lTnVtIjoiMzgiLCJPcmlnaW5hbCI6InRzLmNvbmNhdF9tYXAobGFtYmRhIHg6dHMubWFwKGxhbWJkYSB5OnggLSB5KSkuZGlzdGluY3QoKSIsIlZhck5hbWUiOm51bGwsIlZhclR5cGUiOm51bGwsIlJ1bklmUXVlcnkiOmZhbHNlLCJWYWx1ZSI6bnVsbCwiSmF2YSI6InRzLmNvbmNhdE1hcCh4ID0+IHRzLm1hcCh5ID0+IHIuc3ViKHgsIHkpKSkuZGlzdGluY3QoKSIsIkV4cGVjdGVkT3JpZ2luYWwiOiIoWzBdKSIsIkV4cGVjdGVkVHlwZSI6Ikxpc3QiLCJFeHBlY3RlZEphdmEiOiJyLmFycmF5KDBMKSIsIk9idGFpbmVkIjpudWxsLCJSdW5PcHRzIjpbXSwiUmVuZGVyU29tZXRoaW5nIjpmYWxzZX0=" );
                 //JavaQuery, times/timezones.yaml, #38
                 /* ExpectedOriginal: ([0]) */
                 var expected_ = r.array(0L);
                 
                 /* Original: ts.concat_map(lambda x:ts.map(lambda y:x - y)).distinct() */
                 var obtained = runOrCatch( ts.concatMap(x => ts.map(y => r.sub(x, y))).distinct() ,
                                            new {
                    }, conn);
                 
                     assertEquals(expected_, obtained);                 
             }
             
             {
                 SetContext( "eyJUZXN0VHlwZSI6IkphdmFRdWVyeSIsIlRlc3RGaWxlIjoidGltZXMvdGltZXpvbmVzLnlhbWwiLCJMaW5lTnVtIjoiNDQiLCJPcmlnaW5hbCI6InIubm93KCkuaW5fdGltZXpvbmUoXCJcIikiLCJWYXJOYW1lIjpudWxsLCJWYXJUeXBlIjpudWxsLCJSdW5JZlF1ZXJ5IjpmYWxzZSwiVmFsdWUiOm51bGwsIkphdmEiOiJyLm5vdygpLmluVGltZXpvbmUoXCJcIikiLCJFeHBlY3RlZE9yaWdpbmFsIjoiZXJyKCdSZXFsUXVlcnlMb2dpY0Vycm9yJywgJ1RpbWV6b25lIGBgIGRvZXMgbm90IHN0YXJ0IHdpdGggYC1gIG9yIGArYC4nKSIsIkV4cGVjdGVkVHlwZSI6IkVyciIsIkV4cGVjdGVkSmF2YSI6ImVycihcIlJlcWxRdWVyeUxvZ2ljRXJyb3JcIiwgXCJUaW1lem9uZSBgYCBkb2VzIG5vdCBzdGFydCB3aXRoIGAtYCBvciBgK2AuXCIpIiwiT2J0YWluZWQiOm51bGwsIlJ1bk9wdHMiOltdLCJSZW5kZXJTb21ldGhpbmciOmZhbHNlfQ==" );
                 //JavaQuery, times/timezones.yaml, #44
                 /* ExpectedOriginal: err('ReqlQueryLogicError', 'Timezone `` does not start with `-` or `+`.') */
                 var expected_ = err("ReqlQueryLogicError", "Timezone `` does not start with `-` or `+`.");
                 
                 /* Original: r.now().in_timezone("") */
                 var obtained = runOrCatch( r.now().inTimezone("") ,
                                            new {
                    }, conn);
                 
                     assertEquals(expected_, obtained);                 
             }
             
             {
                 SetContext( "eyJUZXN0VHlwZSI6IkphdmFRdWVyeSIsIlRlc3RGaWxlIjoidGltZXMvdGltZXpvbmVzLnlhbWwiLCJMaW5lTnVtIjoiNDciLCJPcmlnaW5hbCI6InIubm93KCkuaW5fdGltZXpvbmUoXCItMDBcIikiLCJWYXJOYW1lIjpudWxsLCJWYXJUeXBlIjpudWxsLCJSdW5JZlF1ZXJ5IjpmYWxzZSwiVmFsdWUiOm51bGwsIkphdmEiOiJyLm5vdygpLmluVGltZXpvbmUoXCItMDBcIikiLCJFeHBlY3RlZE9yaWdpbmFsIjoiZXJyKCdSZXFsUXVlcnlMb2dpY0Vycm9yJywgJ2AtMDBgIGlzIG5vdCBhIHZhbGlkIHRpbWUgb2Zmc2V0LicpIiwiRXhwZWN0ZWRUeXBlIjoiRXJyIiwiRXhwZWN0ZWRKYXZhIjoiZXJyKFwiUmVxbFF1ZXJ5TG9naWNFcnJvclwiLCBcImAtMDBgIGlzIG5vdCBhIHZhbGlkIHRpbWUgb2Zmc2V0LlwiKSIsIk9idGFpbmVkIjpudWxsLCJSdW5PcHRzIjpbXSwiUmVuZGVyU29tZXRoaW5nIjpmYWxzZX0=" );
                 //JavaQuery, times/timezones.yaml, #47
                 /* ExpectedOriginal: err('ReqlQueryLogicError', '`-00` is not a valid time offset.') */
                 var expected_ = err("ReqlQueryLogicError", "`-00` is not a valid time offset.");
                 
                 /* Original: r.now().in_timezone("-00") */
                 var obtained = runOrCatch( r.now().inTimezone("-00") ,
                                            new {
                    }, conn);
                 
                     assertEquals(expected_, obtained);                 
             }
             
             {
                 SetContext( "eyJUZXN0VHlwZSI6IkphdmFRdWVyeSIsIlRlc3RGaWxlIjoidGltZXMvdGltZXpvbmVzLnlhbWwiLCJMaW5lTnVtIjoiNTAiLCJPcmlnaW5hbCI6InIubm93KCkuaW5fdGltZXpvbmUoXCItMDA6MDBcIikiLCJWYXJOYW1lIjpudWxsLCJWYXJUeXBlIjpudWxsLCJSdW5JZlF1ZXJ5IjpmYWxzZSwiVmFsdWUiOm51bGwsIkphdmEiOiJyLm5vdygpLmluVGltZXpvbmUoXCItMDA6MDBcIikiLCJFeHBlY3RlZE9yaWdpbmFsIjoiZXJyKCdSZXFsUXVlcnlMb2dpY0Vycm9yJywgJ2AtMDA6MDBgIGlzIG5vdCBhIHZhbGlkIHRpbWUgb2Zmc2V0LicpIiwiRXhwZWN0ZWRUeXBlIjoiRXJyIiwiRXhwZWN0ZWRKYXZhIjoiZXJyKFwiUmVxbFF1ZXJ5TG9naWNFcnJvclwiLCBcImAtMDA6MDBgIGlzIG5vdCBhIHZhbGlkIHRpbWUgb2Zmc2V0LlwiKSIsIk9idGFpbmVkIjpudWxsLCJSdW5PcHRzIjpbXSwiUmVuZGVyU29tZXRoaW5nIjpmYWxzZX0=" );
                 //JavaQuery, times/timezones.yaml, #50
                 /* ExpectedOriginal: err('ReqlQueryLogicError', '`-00:00` is not a valid time offset.') */
                 var expected_ = err("ReqlQueryLogicError", "`-00:00` is not a valid time offset.");
                 
                 /* Original: r.now().in_timezone("-00:00") */
                 var obtained = runOrCatch( r.now().inTimezone("-00:00") ,
                                            new {
                    }, conn);
                 
                     assertEquals(expected_, obtained);                 
             }
             
             {
                 SetContext( "eyJUZXN0VHlwZSI6IkphdmFRdWVyeSIsIlRlc3RGaWxlIjoidGltZXMvdGltZXpvbmVzLnlhbWwiLCJMaW5lTnVtIjoiNTMiLCJPcmlnaW5hbCI6InIubm93KCkuaW5fdGltZXpvbmUoXCJVVEMrMDBcIikiLCJWYXJOYW1lIjpudWxsLCJWYXJUeXBlIjpudWxsLCJSdW5JZlF1ZXJ5IjpmYWxzZSwiVmFsdWUiOm51bGwsIkphdmEiOiJyLm5vdygpLmluVGltZXpvbmUoXCJVVEMrMDBcIikiLCJFeHBlY3RlZE9yaWdpbmFsIjoiZXJyKCdSZXFsUXVlcnlMb2dpY0Vycm9yJywgJ1RpbWV6b25lIGBVVEMrMDBgIGRvZXMgbm90IHN0YXJ0IHdpdGggYC1gIG9yIGArYC4nKSIsIkV4cGVjdGVkVHlwZSI6IkVyciIsIkV4cGVjdGVkSmF2YSI6ImVycihcIlJlcWxRdWVyeUxvZ2ljRXJyb3JcIiwgXCJUaW1lem9uZSBgVVRDKzAwYCBkb2VzIG5vdCBzdGFydCB3aXRoIGAtYCBvciBgK2AuXCIpIiwiT2J0YWluZWQiOm51bGwsIlJ1bk9wdHMiOltdLCJSZW5kZXJTb21ldGhpbmciOmZhbHNlfQ==" );
                 //JavaQuery, times/timezones.yaml, #53
                 /* ExpectedOriginal: err('ReqlQueryLogicError', 'Timezone `UTC+00` does not start with `-` or `+`.') */
                 var expected_ = err("ReqlQueryLogicError", "Timezone `UTC+00` does not start with `-` or `+`.");
                 
                 /* Original: r.now().in_timezone("UTC+00") */
                 var obtained = runOrCatch( r.now().inTimezone("UTC+00") ,
                                            new {
                    }, conn);
                 
                     assertEquals(expected_, obtained);                 
             }
             
             {
                 SetContext( "eyJUZXN0VHlwZSI6IkphdmFRdWVyeSIsIlRlc3RGaWxlIjoidGltZXMvdGltZXpvbmVzLnlhbWwiLCJMaW5lTnVtIjoiNTYiLCJPcmlnaW5hbCI6InIubm93KCkuaW5fdGltZXpvbmUoXCIrMDA6NjBcIikiLCJWYXJOYW1lIjpudWxsLCJWYXJUeXBlIjpudWxsLCJSdW5JZlF1ZXJ5IjpmYWxzZSwiVmFsdWUiOm51bGwsIkphdmEiOiJyLm5vdygpLmluVGltZXpvbmUoXCIrMDA6NjBcIikiLCJFeHBlY3RlZE9yaWdpbmFsIjoiZXJyKCdSZXFsUXVlcnlMb2dpY0Vycm9yJywgJ01pbnV0ZXMgb3V0IG9mIHJhbmdlIGluIGArMDA6NjBgLicpIiwiRXhwZWN0ZWRUeXBlIjoiRXJyIiwiRXhwZWN0ZWRKYXZhIjoiZXJyKFwiUmVxbFF1ZXJ5TG9naWNFcnJvclwiLCBcIk1pbnV0ZXMgb3V0IG9mIHJhbmdlIGluIGArMDA6NjBgLlwiKSIsIk9idGFpbmVkIjpudWxsLCJSdW5PcHRzIjpbXSwiUmVuZGVyU29tZXRoaW5nIjpmYWxzZX0=" );
                 //JavaQuery, times/timezones.yaml, #56
                 /* ExpectedOriginal: err('ReqlQueryLogicError', 'Minutes out of range in `+00:60`.') */
                 var expected_ = err("ReqlQueryLogicError", "Minutes out of range in `+00:60`.");
                 
                 /* Original: r.now().in_timezone("+00:60") */
                 var obtained = runOrCatch( r.now().inTimezone("+00:60") ,
                                            new {
                    }, conn);
                 
                     assertEquals(expected_, obtained);                 
             }
             
             {
                 SetContext( "eyJUZXN0VHlwZSI6IkphdmFRdWVyeSIsIlRlc3RGaWxlIjoidGltZXMvdGltZXpvbmVzLnlhbWwiLCJMaW5lTnVtIjoiNTkiLCJPcmlnaW5hbCI6InIubm93KCkuaW5fdGltZXpvbmUoXCIrMjU6MDBcIikiLCJWYXJOYW1lIjpudWxsLCJWYXJUeXBlIjpudWxsLCJSdW5JZlF1ZXJ5IjpmYWxzZSwiVmFsdWUiOm51bGwsIkphdmEiOiJyLm5vdygpLmluVGltZXpvbmUoXCIrMjU6MDBcIikiLCJFeHBlY3RlZE9yaWdpbmFsIjoiZXJyKCdSZXFsUXVlcnlMb2dpY0Vycm9yJywgJ0hvdXJzIG91dCBvZiByYW5nZSBpbiBgKzI1OjAwYC4nKSIsIkV4cGVjdGVkVHlwZSI6IkVyciIsIkV4cGVjdGVkSmF2YSI6ImVycihcIlJlcWxRdWVyeUxvZ2ljRXJyb3JcIiwgXCJIb3VycyBvdXQgb2YgcmFuZ2UgaW4gYCsyNTowMGAuXCIpIiwiT2J0YWluZWQiOm51bGwsIlJ1bk9wdHMiOltdLCJSZW5kZXJTb21ldGhpbmciOmZhbHNlfQ==" );
                 //JavaQuery, times/timezones.yaml, #59
                 /* ExpectedOriginal: err('ReqlQueryLogicError', 'Hours out of range in `+25:00`.') */
                 var expected_ = err("ReqlQueryLogicError", "Hours out of range in `+25:00`.");
                 
                 /* Original: r.now().in_timezone("+25:00") */
                 var obtained = runOrCatch( r.now().inTimezone("+25:00") ,
                                            new {
                    }, conn);
                 
                     assertEquals(expected_, obtained);                 
             }
             
             {
                 SetContext( "eyJUZXN0VHlwZSI6IkphdmFRdWVyeSIsIlRlc3RGaWxlIjoidGltZXMvdGltZXpvbmVzLnlhbWwiLCJMaW5lTnVtIjoiNjMiLCJPcmlnaW5hbCI6InIudGltZSgyMDEzLCAxLCAxLCBcIlwiKSIsIlZhck5hbWUiOm51bGwsIlZhclR5cGUiOm51bGwsIlJ1bklmUXVlcnkiOmZhbHNlLCJWYWx1ZSI6bnVsbCwiSmF2YSI6InIudGltZSgyMDEzTCwgMUwsIDFMLCBcIlwiKSIsIkV4cGVjdGVkT3JpZ2luYWwiOiJlcnIoJ1JlcWxRdWVyeUxvZ2ljRXJyb3InLCAnVGltZXpvbmUgYGAgZG9lcyBub3Qgc3RhcnQgd2l0aCBgLWAgb3IgYCtgLicpIiwiRXhwZWN0ZWRUeXBlIjoiRXJyIiwiRXhwZWN0ZWRKYXZhIjoiZXJyKFwiUmVxbFF1ZXJ5TG9naWNFcnJvclwiLCBcIlRpbWV6b25lIGBgIGRvZXMgbm90IHN0YXJ0IHdpdGggYC1gIG9yIGArYC5cIikiLCJPYnRhaW5lZCI6bnVsbCwiUnVuT3B0cyI6W10sIlJlbmRlclNvbWV0aGluZyI6ZmFsc2V9" );
                 //JavaQuery, times/timezones.yaml, #63
                 /* ExpectedOriginal: err('ReqlQueryLogicError', 'Timezone `` does not start with `-` or `+`.') */
                 var expected_ = err("ReqlQueryLogicError", "Timezone `` does not start with `-` or `+`.");
                 
                 /* Original: r.time(2013, 1, 1, "") */
                 var obtained = runOrCatch( r.time(2013L, 1L, 1L, "") ,
                                            new {
                    }, conn);
                 
                     assertEquals(expected_, obtained);                 
             }
             
             {
                 SetContext( "eyJUZXN0VHlwZSI6IkphdmFRdWVyeSIsIlRlc3RGaWxlIjoidGltZXMvdGltZXpvbmVzLnlhbWwiLCJMaW5lTnVtIjoiNjYiLCJPcmlnaW5hbCI6InIudGltZSgyMDEzLCAxLCAxLCBcIi0wMFwiKSIsIlZhck5hbWUiOm51bGwsIlZhclR5cGUiOm51bGwsIlJ1bklmUXVlcnkiOmZhbHNlLCJWYWx1ZSI6bnVsbCwiSmF2YSI6InIudGltZSgyMDEzTCwgMUwsIDFMLCBcIi0wMFwiKSIsIkV4cGVjdGVkT3JpZ2luYWwiOiJlcnIoJ1JlcWxRdWVyeUxvZ2ljRXJyb3InLCAnYC0wMGAgaXMgbm90IGEgdmFsaWQgdGltZSBvZmZzZXQuJykiLCJFeHBlY3RlZFR5cGUiOiJFcnIiLCJFeHBlY3RlZEphdmEiOiJlcnIoXCJSZXFsUXVlcnlMb2dpY0Vycm9yXCIsIFwiYC0wMGAgaXMgbm90IGEgdmFsaWQgdGltZSBvZmZzZXQuXCIpIiwiT2J0YWluZWQiOm51bGwsIlJ1bk9wdHMiOltdLCJSZW5kZXJTb21ldGhpbmciOmZhbHNlfQ==" );
                 //JavaQuery, times/timezones.yaml, #66
                 /* ExpectedOriginal: err('ReqlQueryLogicError', '`-00` is not a valid time offset.') */
                 var expected_ = err("ReqlQueryLogicError", "`-00` is not a valid time offset.");
                 
                 /* Original: r.time(2013, 1, 1, "-00") */
                 var obtained = runOrCatch( r.time(2013L, 1L, 1L, "-00") ,
                                            new {
                    }, conn);
                 
                     assertEquals(expected_, obtained);                 
             }
             
             {
                 SetContext( "eyJUZXN0VHlwZSI6IkphdmFRdWVyeSIsIlRlc3RGaWxlIjoidGltZXMvdGltZXpvbmVzLnlhbWwiLCJMaW5lTnVtIjoiNjkiLCJPcmlnaW5hbCI6InIudGltZSgyMDEzLCAxLCAxLCBcIi0wMDowMFwiKSIsIlZhck5hbWUiOm51bGwsIlZhclR5cGUiOm51bGwsIlJ1bklmUXVlcnkiOmZhbHNlLCJWYWx1ZSI6bnVsbCwiSmF2YSI6InIudGltZSgyMDEzTCwgMUwsIDFMLCBcIi0wMDowMFwiKSIsIkV4cGVjdGVkT3JpZ2luYWwiOiJlcnIoJ1JlcWxRdWVyeUxvZ2ljRXJyb3InLCAnYC0wMDowMGAgaXMgbm90IGEgdmFsaWQgdGltZSBvZmZzZXQuJykiLCJFeHBlY3RlZFR5cGUiOiJFcnIiLCJFeHBlY3RlZEphdmEiOiJlcnIoXCJSZXFsUXVlcnlMb2dpY0Vycm9yXCIsIFwiYC0wMDowMGAgaXMgbm90IGEgdmFsaWQgdGltZSBvZmZzZXQuXCIpIiwiT2J0YWluZWQiOm51bGwsIlJ1bk9wdHMiOltdLCJSZW5kZXJTb21ldGhpbmciOmZhbHNlfQ==" );
                 //JavaQuery, times/timezones.yaml, #69
                 /* ExpectedOriginal: err('ReqlQueryLogicError', '`-00:00` is not a valid time offset.') */
                 var expected_ = err("ReqlQueryLogicError", "`-00:00` is not a valid time offset.");
                 
                 /* Original: r.time(2013, 1, 1, "-00:00") */
                 var obtained = runOrCatch( r.time(2013L, 1L, 1L, "-00:00") ,
                                            new {
                    }, conn);
                 
                     assertEquals(expected_, obtained);                 
             }
             
             {
                 SetContext( "eyJUZXN0VHlwZSI6IkphdmFRdWVyeSIsIlRlc3RGaWxlIjoidGltZXMvdGltZXpvbmVzLnlhbWwiLCJMaW5lTnVtIjoiNzIiLCJPcmlnaW5hbCI6InIudGltZSgyMDEzLCAxLCAxLCBcIlVUQyswMFwiKSIsIlZhck5hbWUiOm51bGwsIlZhclR5cGUiOm51bGwsIlJ1bklmUXVlcnkiOmZhbHNlLCJWYWx1ZSI6bnVsbCwiSmF2YSI6InIudGltZSgyMDEzTCwgMUwsIDFMLCBcIlVUQyswMFwiKSIsIkV4cGVjdGVkT3JpZ2luYWwiOiJlcnIoJ1JlcWxRdWVyeUxvZ2ljRXJyb3InLCAnVGltZXpvbmUgYFVUQyswMGAgZG9lcyBub3Qgc3RhcnQgd2l0aCBgLWAgb3IgYCtgLicpIiwiRXhwZWN0ZWRUeXBlIjoiRXJyIiwiRXhwZWN0ZWRKYXZhIjoiZXJyKFwiUmVxbFF1ZXJ5TG9naWNFcnJvclwiLCBcIlRpbWV6b25lIGBVVEMrMDBgIGRvZXMgbm90IHN0YXJ0IHdpdGggYC1gIG9yIGArYC5cIikiLCJPYnRhaW5lZCI6bnVsbCwiUnVuT3B0cyI6W10sIlJlbmRlclNvbWV0aGluZyI6ZmFsc2V9" );
                 //JavaQuery, times/timezones.yaml, #72
                 /* ExpectedOriginal: err('ReqlQueryLogicError', 'Timezone `UTC+00` does not start with `-` or `+`.') */
                 var expected_ = err("ReqlQueryLogicError", "Timezone `UTC+00` does not start with `-` or `+`.");
                 
                 /* Original: r.time(2013, 1, 1, "UTC+00") */
                 var obtained = runOrCatch( r.time(2013L, 1L, 1L, "UTC+00") ,
                                            new {
                    }, conn);
                 
                     assertEquals(expected_, obtained);                 
             }
             
             {
                 SetContext( "eyJUZXN0VHlwZSI6IkphdmFRdWVyeSIsIlRlc3RGaWxlIjoidGltZXMvdGltZXpvbmVzLnlhbWwiLCJMaW5lTnVtIjoiNzUiLCJPcmlnaW5hbCI6InIudGltZSgyMDEzLCAxLCAxLCBcIiswMDo2MFwiKSIsIlZhck5hbWUiOm51bGwsIlZhclR5cGUiOm51bGwsIlJ1bklmUXVlcnkiOmZhbHNlLCJWYWx1ZSI6bnVsbCwiSmF2YSI6InIudGltZSgyMDEzTCwgMUwsIDFMLCBcIiswMDo2MFwiKSIsIkV4cGVjdGVkT3JpZ2luYWwiOiJlcnIoJ1JlcWxRdWVyeUxvZ2ljRXJyb3InLCAnTWludXRlcyBvdXQgb2YgcmFuZ2UgaW4gYCswMDo2MGAuJykiLCJFeHBlY3RlZFR5cGUiOiJFcnIiLCJFeHBlY3RlZEphdmEiOiJlcnIoXCJSZXFsUXVlcnlMb2dpY0Vycm9yXCIsIFwiTWludXRlcyBvdXQgb2YgcmFuZ2UgaW4gYCswMDo2MGAuXCIpIiwiT2J0YWluZWQiOm51bGwsIlJ1bk9wdHMiOltdLCJSZW5kZXJTb21ldGhpbmciOmZhbHNlfQ==" );
                 //JavaQuery, times/timezones.yaml, #75
                 /* ExpectedOriginal: err('ReqlQueryLogicError', 'Minutes out of range in `+00:60`.') */
                 var expected_ = err("ReqlQueryLogicError", "Minutes out of range in `+00:60`.");
                 
                 /* Original: r.time(2013, 1, 1, "+00:60") */
                 var obtained = runOrCatch( r.time(2013L, 1L, 1L, "+00:60") ,
                                            new {
                    }, conn);
                 
                     assertEquals(expected_, obtained);                 
             }
             
             {
                 SetContext( "eyJUZXN0VHlwZSI6IkphdmFRdWVyeSIsIlRlc3RGaWxlIjoidGltZXMvdGltZXpvbmVzLnlhbWwiLCJMaW5lTnVtIjoiNzgiLCJPcmlnaW5hbCI6InIudGltZSgyMDEzLCAxLCAxLCBcIisyNTowMFwiKSIsIlZhck5hbWUiOm51bGwsIlZhclR5cGUiOm51bGwsIlJ1bklmUXVlcnkiOmZhbHNlLCJWYWx1ZSI6bnVsbCwiSmF2YSI6InIudGltZSgyMDEzTCwgMUwsIDFMLCBcIisyNTowMFwiKSIsIkV4cGVjdGVkT3JpZ2luYWwiOiJlcnIoJ1JlcWxRdWVyeUxvZ2ljRXJyb3InLCAnSG91cnMgb3V0IG9mIHJhbmdlIGluIGArMjU6MDBgLicpIiwiRXhwZWN0ZWRUeXBlIjoiRXJyIiwiRXhwZWN0ZWRKYXZhIjoiZXJyKFwiUmVxbFF1ZXJ5TG9naWNFcnJvclwiLCBcIkhvdXJzIG91dCBvZiByYW5nZSBpbiBgKzI1OjAwYC5cIikiLCJPYnRhaW5lZCI6bnVsbCwiUnVuT3B0cyI6W10sIlJlbmRlclNvbWV0aGluZyI6ZmFsc2V9" );
                 //JavaQuery, times/timezones.yaml, #78
                 /* ExpectedOriginal: err('ReqlQueryLogicError', 'Hours out of range in `+25:00`.') */
                 var expected_ = err("ReqlQueryLogicError", "Hours out of range in `+25:00`.");
                 
                 /* Original: r.time(2013, 1, 1, "+25:00") */
                 var obtained = runOrCatch( r.time(2013L, 1L, 1L, "+25:00") ,
                                            new {
                    }, conn);
                 
                     assertEquals(expected_, obtained);                 
             }
             
             {
                 SetContext( "eyJUZXN0VHlwZSI6IkphdmFRdWVyeSIsIlRlc3RGaWxlIjoidGltZXMvdGltZXpvbmVzLnlhbWwiLCJMaW5lTnVtIjoiODEiLCJPcmlnaW5hbCI6InIuZXBvY2hfdGltZSgxNDM2NDI4NDIyLjMzOSkuaW5fdGltZXpvbmUoJy0wODowMCcpLmRhdGUoKS50b19pc284NjAxKCkiLCJWYXJOYW1lIjpudWxsLCJWYXJUeXBlIjpudWxsLCJSdW5JZlF1ZXJ5IjpmYWxzZSwiVmFsdWUiOm51bGwsIkphdmEiOiJyLmVwb2NoVGltZSgxNDM2NDI4NDIyLjMzOSkuaW5UaW1lem9uZShcIi0wODowMFwiKS5kYXRlKCkudG9Jc284NjAxKCkiLCJFeHBlY3RlZE9yaWdpbmFsIjoiKFwiMjAxNS0wNy0wOFQwMDowMDowMC0wODowMFwiKSIsIkV4cGVjdGVkVHlwZSI6IlN0cmluZyIsIkV4cGVjdGVkSmF2YSI6IlwiMjAxNS0wNy0wOFQwMDowMDowMC0wODowMFwiIiwiT2J0YWluZWQiOm51bGwsIlJ1bk9wdHMiOltdLCJSZW5kZXJTb21ldGhpbmciOmZhbHNlfQ==" );
                 //JavaQuery, times/timezones.yaml, #81
                 /* ExpectedOriginal: ("2015-07-08T00:00:00-08:00") */
                 var expected_ = "2015-07-08T00:00:00-08:00";
                 
                 /* Original: r.epoch_time(1436428422.339).in_timezone('-08:00').date().to_iso8601() */
                 var obtained = runOrCatch( r.epochTime(1436428422.339).inTimezone("-08:00").date().toIso8601() ,
                                            new {
                    }, conn);
                 
                     assertEquals(expected_, obtained);                 
             }
             
             {
                 SetContext( "eyJUZXN0VHlwZSI6IkphdmFRdWVyeSIsIlRlc3RGaWxlIjoidGltZXMvdGltZXpvbmVzLnlhbWwiLCJMaW5lTnVtIjoiODUiLCJPcmlnaW5hbCI6InIuZXBvY2hfdGltZSgxNDM2NDI4NDIyLjMzOSkuaW5fdGltZXpvbmUoJy0wNzowMCcpLmRhdGUoKS50b19pc284NjAxKCkiLCJWYXJOYW1lIjpudWxsLCJWYXJUeXBlIjpudWxsLCJSdW5JZlF1ZXJ5IjpmYWxzZSwiVmFsdWUiOm51bGwsIkphdmEiOiJyLmVwb2NoVGltZSgxNDM2NDI4NDIyLjMzOSkuaW5UaW1lem9uZShcIi0wNzowMFwiKS5kYXRlKCkudG9Jc284NjAxKCkiLCJFeHBlY3RlZE9yaWdpbmFsIjoiKFwiMjAxNS0wNy0wOVQwMDowMDowMC0wNzowMFwiKSIsIkV4cGVjdGVkVHlwZSI6IlN0cmluZyIsIkV4cGVjdGVkSmF2YSI6IlwiMjAxNS0wNy0wOVQwMDowMDowMC0wNzowMFwiIiwiT2J0YWluZWQiOm51bGwsIlJ1bk9wdHMiOltdLCJSZW5kZXJTb21ldGhpbmciOmZhbHNlfQ==" );
                 //JavaQuery, times/timezones.yaml, #85
                 /* ExpectedOriginal: ("2015-07-09T00:00:00-07:00") */
                 var expected_ = "2015-07-09T00:00:00-07:00";
                 
                 /* Original: r.epoch_time(1436428422.339).in_timezone('-07:00').date().to_iso8601() */
                 var obtained = runOrCatch( r.epochTime(1436428422.339).inTimezone("-07:00").date().toIso8601() ,
                                            new {
                    }, conn);
                 
                     assertEquals(expected_, obtained);                 
             }
             

        }
    }
}
